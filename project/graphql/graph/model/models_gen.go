// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type List struct {
	Name string `json:"name"`
}

type ListConnection struct {
	TotalCount *int32        `json:"totalCount,omitempty"`
	Lists      []*ListOutput `json:"lists,omitempty"`
	PageInfo   *PageInfo     `json:"pageInfo"`
}

type ListOutput struct {
	ID    string        `json:"id"`
	Name  string        `json:"name"`
	Owner string        `json:"owner"`
	Users []string      `json:"users"`
	Todos []*TodoOutput `json:"todos"`
}

type Mutation struct {
}

type PageInfo struct {
	StartCursor *string `json:"startCursor,omitempty"`
	EndCursor   *string `json:"endCursor,omitempty"`
	HasNextPage bool    `json:"hasNextPage"`
}

type Query struct {
}

type Todo struct {
	Name        string    `json:"name"`
	Description string    `json:"description"`
	Deadline    time.Time `json:"deadline"`
	Priority    string    `json:"priority"`
}

type TodoConnection struct {
	TotalCount *int32        `json:"totalCount,omitempty"`
	Todos      []*TodoOutput `json:"todos,omitempty"`
	PageInfo   *PageInfo     `json:"pageInfo"`
}

type TodoOutput struct {
	ID          string    `json:"id"`
	ListID      string    `json:"listId"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
	Deadline    time.Time `json:"deadline"`
	Assignee    string    `json:"assignee"`
	Status      string    `json:"status"`
	Priority    string    `json:"priority"`
}

type UpdateTodoInput struct {
	Name        *string    `json:"name,omitempty"`
	Description *string    `json:"description,omitempty"`
	Deadline    *time.Time `json:"deadline,omitempty"`
	Priority    *string    `json:"priority,omitempty"`
}

type User struct {
	Username string `json:"username"`
}

type UserOutput struct {
	ListID   string `json:"listId"`
	ListName string `json:"listName"`
	Username string `json:"username"`
	IsOwner  bool   `json:"isOwner"`
}
